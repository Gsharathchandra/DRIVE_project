<!-- <!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
    <link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"
/>
  </head>
  <body>
    <main class="p-4 bg-gray-100 dark:bg-gray-800 h-screen w-screen">
    
    <button onclick="showPopUP()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">upload file</button>
    
    <div class="pop hidden backdrop-blur fixed top-0 left-0 h-screen w-screen flex items-center justify-center">
      <form action="/upload-file" method="post" enctype="multipart/form-data">

      
<div class="flex items-center justify-center w-96">
    <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
        <div class="flex flex-col items-center justify-center pt-5 pb-6">
            <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
            </svg>
            <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
            <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
        </div>
        <input id="dropzone-file" type="file" class="hidden" name="file" />
    </label>
</div> 
<button class="bg-gray-600 hover:bg-gray-700 text-white font-bold mt-2 py-2 px-4 rounded-lg">Upload file</button>

</form>
<button class="absolute top-4 right-4 text-white text-xl" onclick="hidePopUP()" class="bg-gray-600 hover:bg-gray-700 text-white font-bold mt-2 py-2 px-4 rounded-lg"><i class="ri-close-large-line"></i></button>
    </div>
  
  </main>


    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script>
      function showPopUP (){
        document.querySelector('.pop').style.display = 'flex'
      }
      function hidePopUP (){
        document.querySelector('.pop').style.display = 'none'
      }
    </script>
  </body>
</html> -->



<!doctype html>
<html>
  <head>
    <!-- Your existing head content -->
  </head>
  <body>
    <main class="p-4 bg-gray-100 dark:bg-gray-800 h-screen w-screen">
      <div class="flex justify-between items-center mb-4">
        <h1 class="text-2xl font-bold">My Files</h1>
        <button onclick="showPopUP()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">
          Upload file
        </button>
      </div>

      <!-- File list -->
      <div id="fileList" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <!-- Files will be loaded here -->
      </div>

      <!-- Your existing popup code -->
    </main>

    <script>
      // Load files when page loads
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          const response = await fetch('/files/list', {
            credentials: 'include' // Important for cookies
          });
          
          if (!response.ok) throw new Error('Failed to load files');
          
          const files = await response.json();
          renderFiles(files);
        } catch (error) {
          console.error(error);
          alert('Error loading files');
        }
      });

      function renderFiles(files) {
        const container = document.getElementById('fileList');
        container.innerHTML = files.map(file => `
          <div class="bg-white dark:bg-gray-700 rounded-lg p-4 shadow">
            <div class="flex items-center mb-2">
              <i class="ri-file-text-line text-2xl mr-2"></i>
              <span class="truncate">${file.filename}</span>
            </div>
            <div class="text-sm text-gray-500 dark:text-gray-400 mb-2">
              ${(file.length / 1024).toFixed(2)} KB
            </div>
            <div class="flex space-x-2">
              <button onclick="downloadFile('${file._id}')" class="text-blue-500 hover:text-blue-700">
                <i class="ri-download-line"></i>
              </button>
              <button onclick="deleteFile('${file._id}')" class="text-red-500 hover:text-red-700">
                <i class="ri-delete-bin-line"></i>
              </button>
            </div>
          </div>
        `).join('');
      }

      async function downloadFile(fileId) {
        window.open(`/files/download/${fileId}`, '_blank');
      }

      async function deleteFile(fileId) {
        try {
          const response = await fetch(`/files/delete/${fileId}`, {
            method: 'DELETE',
            credentials: 'include'
          });
          
          if (!response.ok) throw new Error('Failed to delete file');
          
          const result = await response.json();
          alert(result.message);
          // Refresh file list
          location.reload();
        } catch (error) {
          console.error(error);
          alert('Error deleting file');
        }
      }

      // Your existing popup functions
      function showPopUP() {
        document.querySelector('.pop').style.display = 'flex';
      }
      
      function hidePopUP() {
        document.querySelector('.pop').style.display = 'none';
      }
    </script>
  </body>
</html>