<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
    <title>My Google Drive</title>
  </head>
  <body>
    <main class="p-4 bg-gray-100 dark:bg-gray-800 h-screen w-screen">
      <button onclick="showPopUP()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">
        <i class="ri-upload-cloud-2-line mr-2"></i>Upload File
      </button>
      
      <form action="/user/logout" method="post" class="inline">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <button type="submit" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg ml-4">
          <i class="ri-logout-box-line mr-2"></i>Logout
        </button>
      </form>

      <div id="userInfo" class="text-sm text-gray-600 dark:text-gray-400 mt-4">Loading...</div>

      <!-- Files Grid -->
      <div id="filesContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6">
        <!-- Files will be loaded here -->
      </div>
      
      <!-- Upload Modal -->
      <div class="pop hidden fixed top-0 left-0 h-screen w-screen flex items-center justify-center bg-black bg-opacity-50">
        <form action="/upload-file" method="post" enctype="multipart/form-data">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <div class="flex items-center justify-center w-96">
            <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
              <div class="flex flex-col items-center justify-center pt-5 pb-6">
                <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"/>
                </svg>
                <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                <p class="text-xs text-gray-500 dark:text-gray-400">JPEG, PNG, PDF, TXT, DOC, DOCX (MAX. 10MB)</p>
              </div>
              <input id="dropzone-file" type="file" class="hidden" name="file" required />
            </label>
          </div> 
          <button type="submit" class="bg-gray-600 hover:bg-gray-700 text-white font-bold mt-2 py-2 px-4 rounded-lg">Upload File</button>
        </form>
        <button class="absolute top-4 right-4 text-white text-xl" onclick="hidePopUP()">
          <i class="ri-close-large-line"></i>
        </button>
      </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script>
      function showPopUP() {
        document.querySelector('.pop').classList.remove('hidden');
      }
      
      function hidePopUP() {
        document.querySelector('.pop').classList.add('hidden');
      }
      
      async function loadUserInfo() {
        try {
          const response = await fetch('/user/profile');
          const data = await response.json();
          
          if (data.success) {
            document.getElementById('userInfo').textContent = `Welcome back, ${data.user.username}!`;
          } else {
            window.location.href = '/user/login';
          }
        } catch (error) {
          console.error('Error loading user info:', error);
          window.location.href = '/user/login';
        }
      }
      
      async function loadFiles() {
        try {
          const response = await fetch('/my-files');
          const data = await response.json();
          
          if (data.success) {
            displayFiles(data.files);
          } else {
            console.error('Failed to load files:', data.message);
          }
        } catch (error) {
          console.error('Error loading files:', error);
        }
      }
      
      function displayFiles(files) {
        const container = document.getElementById('filesContainer');
        
        if (files.length === 0) {
          container.innerHTML = `
            <div class="col-span-full text-center py-12">
              <i class="ri-folder-open-line text-4xl text-gray-400 mb-4"></i>
              <p class="text-gray-500 dark:text-gray-400">No files uploaded yet</p>
            </div>
          `;
          return;
        }
        
        container.innerHTML = files.map(file => `
          <div class="bg-white dark:bg-gray-700 rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow">
            <div class="flex items-center justify-between mb-3">
              <div class="flex items-center">
                <i class="ri-file-line text-2xl text-blue-500 mr-3"></i>
                <div>
                  <h3 class="font-medium text-gray-900 dark:text-white truncate" title="${file.originalName}">
                    ${file.originalName.length > 20 ? file.originalName.substring(0, 20) + '...' : file.originalName}
                  </h3>
                  <p class="text-sm text-gray-500 dark:text-gray-400">
                    ${formatFileSize(file.size)}
                  </p>
                </div>
              </div>
              <div class="flex space-x-2">
                <button onclick="downloadFile('${file.filename}', '${file.originalName}')" 
                        class="p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900 rounded">
                  <i class="ri-download-line"></i>
                </button>
                <button onclick="deleteFile('${file._id}')" 
                        class="p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded">
                  <i class="ri-delete-bin-line"></i>
                </button>
              </div>
            </div>
            <div class="text-xs text-gray-400">
              Uploaded: ${new Date(file.uploadDate).toLocaleDateString()}
            </div>
          </div>
        `).join('');
      }
      
      function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
      }
      
      function downloadFile(filename, originalName) {
        const link = document.createElement('a');
        link.href = `/files/${filename}`;
        link.download = originalName;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
      
      async function deleteFile(fileId) {
        if (!confirm('Are you sure you want to delete this file?')) return;
        
        try {
          const response = await fetch(`/files/${fileId}`, {
            method: 'DELETE',
            headers: {
              'X-CSRF-Token': '<%= csrfToken %>',
            },
          });
          
          const data = await response.json();
          
          if (data.success) {
            loadFiles();
          } else {
            alert('Failed to delete file: ' + data.message);
          }
        } catch (error) {
          console.error('Error deleting file:', error);
          alert('Error deleting file');
        }
      }
      
      document.addEventListener('DOMContentLoaded', function() {
        loadUserInfo();
        loadFiles();
        
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('upload') === 'success') {
          setTimeout(() => {
            loadFiles();
          }, 500);
        }
      });
    </script>
  </body>
</html>